{"version":3,"sources":["Components/ContactList/ContactList.module.css","Components/Filter/Filter.module.css","Redux/contacts-types.js","Components/ContactList/ContactList.js","Redux/contacts-actions.js","Components/Filter/Filter.js","Components/ContactForm/ContactForm.js","App.js","Redux/contacts-reducer.js","Redux/store.js","index.js"],"names":["module","exports","connect","state","contacts","items","dispatch","onDeleteItem","id","type","contactsTypes","payload","useState","contactsLocal","setLocalContacts","console","log","useEffect","localStorage","setItem","JSON","stringify","getItem","parsedContacts","parse","className","s","ContactsList","map","name","number","onClick","inputSearchVal","filter","onSearchVal","e","value","nativeEvent","data","Filter","htmlFor","pattern","title","onChange","onSubmitForm","contact","props","inputNameId","uuidv4","inputNumberId","setName","setNumber","handleChangeEvent","target","Phonebook","onSubmit","preventDefault","required","App","initState","combineReducers","toLowerCase","includes","rootReducer","contactsReducer","store","createStore","composeWithDevTools","getState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.257fe281.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactsList\":\"ContactList_ContactsList__YL4-4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Filter\":\"Filter_Filter__f8fFP\"};","const DELETE_ITEM = 'list/deleteItem';\r\nconst FILTER_ITEM = 'list/filterItems';\r\nconst SEARCH_VAL = 'search/searchVal';\r\nconst CHANGE_NAME = 'form/ChangeName';\r\nconst SUBMIT_FORM = 'form/SubmitForm';\r\nconst CHANGE_NUMBER = 'form/ChangeNumber';\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default {\r\n  SUBMIT_FORM,\r\n  DELETE_ITEM,\r\n  FILTER_ITEM,\r\n  SEARCH_VAL,\r\n  CHANGE_NAME,\r\n  CHANGE_NUMBER,\r\n};\r\n","// import React from 'react';\r\nimport { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../Redux/contacts-actions';\r\nimport s from './ContactList.module.css';\r\n// import PropTypes from 'prop-types';\r\n\r\nconst ContactList = ({ contacts, onDeleteItem }) => {\r\n  const [contactsLocal, setLocalContacts] = useState([]);\r\n  console.log(contacts);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('contacts', JSON.stringify(contacts));\r\n  }, [contacts]);\r\n\r\n  useEffect(() => {\r\n    const contactsLocal = localStorage.getItem('contacts');\r\n    const parsedContacts = JSON.parse(contactsLocal);\r\n    setLocalContacts(parsedContacts);\r\n  }, [contacts]);\r\n\r\n  return (\r\n    <div className={s.ContactsList}>\r\n      <ul>\r\n        {contactsLocal.map(({ name, id, number }) => (\r\n          <li key={id}>\r\n            <p>{name + ': ' + number}</p>\r\n            <button\r\n              onClick={() => {\r\n                onDeleteItem(id);\r\n              }}\r\n            >\r\n              Delete\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\n// ContactList.propTypes = {\r\n//   contacts: PropTypes.array,\r\n//   onDeleteId: PropTypes.func.isRequired,\r\n// };\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    contacts: state.contacts.items,\r\n    // onDeleteId: state.contacts.items,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onDeleteItem: id => dispatch(actions.deleteItem(id)),\r\n    // onFilterItems: e => dispatch(actions.filterItems(e.nativeEvent.data)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n","import contactsTypes from './contacts-types';\r\n\r\nexport const submitForm = value => ({\r\n  type: contactsTypes.SUBMIT_FORM,\r\n  payload: value,\r\n});\r\n\r\nexport const searchVal = value => ({\r\n  type: contactsTypes.SEARCH_VAL,\r\n  payload: value,\r\n});\r\n\r\nexport const deleteItem = value => ({\r\n  type: contactsTypes.DELETE_ITEM,\r\n  payload: value,\r\n});\r\n\r\nexport const filterItems = value => ({\r\n  type: contactsTypes.FILTER_ITEM,\r\n  payload: value,\r\n});\r\n","import React from 'react';\r\nimport s from './Filter.module.css';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../Redux/contacts-actions';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Filter = ({ inputSearchVal, onSearchVal }) => {\r\n  console.log(inputSearchVal);\r\n\r\n  return (\r\n    <div className={s.Filter}>\r\n      <label htmlFor=\"\">Find contacts by name</label>\r\n      <input\r\n        type=\"text\"\r\n        name=\"name\"\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n        onChange={onSearchVal}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  filterVal: PropTypes.object,\r\n  // onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    inputSearchVal: state.contacts.filter,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onSearchVal: e => dispatch(actions.filterItems(e.nativeEvent.data)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../Redux/contacts-actions';\r\nimport s from './ContactForm.module.css';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nfunction ContactForm(props) {\r\n  const inputNameId = uuidv4();\r\n  const inputNumberId = uuidv4();\r\n  const id = uuidv4();\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n  const contact = { name, number, id };\r\n\r\n  const handleChangeEvent = e => {\r\n    const { name, value } = e.target;\r\n\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    const { name, number } = e.target;\r\n    // props.onSubmit(contact);\r\n    props.onSubmitForm(contact);\r\n    name.value = '';\r\n    number.value = '';\r\n  };\r\n\r\n  return (\r\n    <div className={s.Phonebook}>\r\n      <form onSubmit={handleSubmit}>\r\n        <label htmlFor={inputNameId}>Name</label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          id={inputNameId}\r\n          onChange={handleChangeEvent}\r\n        />\r\n        <label htmlFor={inputNumberId}>Number</label>\r\n        <input\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          id={inputNumberId}\r\n          onChange={handleChangeEvent}\r\n        />\r\n        <button type=\"submit\">Add contacts</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\n// const mapStateToProps = state => {\r\n//   return {\r\n//     submitVal: state.contacts.items,\r\n//   };\r\n// };\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onSubmitForm: contact => dispatch(actions.submitForm(contact)),\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(ContactForm);\r\n","import './App.css';\n// import { useState, useEffect, useMemo } from 'react';\nimport ContactList from './Components/ContactList/ContactList';\nimport Filter from './Components/Filter/Filter';\nimport ContactForm from './Components/ContactForm/ContactForm';\n// import { v4 as uuidv4 } from 'uuid';\n\nfunction App() {\n  // const [contacts, setContacts] = useState([]);\n  // const [filter, setFilter] = useState('');\n\n  //   const result = contacts.some(value => value.name === contact.name);\n  //   if (!result) {\n  //     setContacts([...contacts, contact]);\n  //   } else alert(`${contact.name} is already in contacts`);\n  // };\n\n  // const inputSearchChange = e => setFilter(e.target.value);\n\n  // const inputContactSearch = useMemo(() => {\n  //   let searchValue = filter.toLowerCase();\n  //   return contacts.filter(contact =>\n  //     contact.name.toLowerCase().includes(searchValue),\n  //   );\n  // }, [filter, contacts]);\n\n  // useEffect(() => {\n  //   const contactsLocal = localStorage.getItem('contacts');\n  //   const parsedContacts = JSON.parse(contactsLocal);\n  //   setContacts(parsedContacts);\n  // }, []);\n\n  // useEffect(() => {\n  //   localStorage.setItem('contacts', JSON.stringify(contacts));\n  // }, [contacts]);\n\n  return (\n    <div className=\"App\">\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h1>Contacts</h1>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n}\n\nexport default App;\n","import { combineReducers } from 'redux';\r\nimport contactsTypes from './contacts-types';\r\n\r\nconst initState = [\r\n  { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n  { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n  { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n  { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n];\r\n\r\nconst itemsReducer = (state = initState, { type, payload }) => {\r\n  console.log(payload);\r\n  console.log(type);\r\n\r\n  switch (type) {\r\n    case contactsTypes.SUBMIT_FORM:\r\n      return [...state, payload];\r\n\r\n    case contactsTypes.DELETE_ITEM:\r\n      return state.filter(contact => contact.id !== payload);\r\n\r\n    case contactsTypes.FILTER_ITEM:\r\n      return payload !== null\r\n        ? state.filter(contact =>\r\n            contact.name.toLowerCase().includes(payload.toLowerCase()),\r\n          )\r\n        : state;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nconst filterReducer = (state = '', { type, payload }) => {\r\n  switch (type) {\r\n    case contactsTypes.SEARCH_VAL:\r\n      return payload;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default combineReducers({\r\n  items: itemsReducer,\r\n  filter: filterReducer,\r\n});\r\n","import { createStore, combineReducers } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport contactsReducer from './contacts-reducer';\r\n\r\nconst rootReducer = combineReducers({\r\n  contacts: contactsReducer,\r\n});\r\n\r\nconst store = createStore(rootReducer, composeWithDevTools());\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport store from './Redux/store';\n// import { changeName } from './Redux/actions';\n// import { changeNumber } from './Redux/actions';\nconsole.log(store.getState());\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n    ;\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}